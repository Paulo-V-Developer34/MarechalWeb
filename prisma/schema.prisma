// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init


// see this later to deploy your database with securit
// https://www.prisma.io/docs/orm/overview/databases/postgresql#configuring-an-ssl-connection


generator client {
  provider = "prisma-client-js"
}

//DB de produção
// datasource db {
//   provider = "postgresql"
//   url      = env("DATABASE_URL")
// }

//DB local
datasource db {
  provider = "sqlite" //não podemos usar o "env()" aqui ;-;
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(cuid())
  senha String @default("Marechal123@")
  nome String @unique
  sala String?
  dtativacao DateTime? @default(now())//aqui eu ainda devo melhorar o mecânismo para que ele fique com a data de ativação
  ativo Boolean @default(false)
  advertencias Int @default(0)
  tipo Int @default(1)
  noticias Noticia[]
  pedidoimpressora PedidoImpressora[]
  msgaluno Msgaluno[]
}

//eu devo aumentar a capacidade, mas o SQLite não me permite especificar, para isso eu deveria utilizar o 
// @db.VarChar(numerodecaracteres)
model Noticia {
  id String @id @default(cuid())
  title String 
  slug String @unique
  intro String
  content String
  nomeautor String
  img String?//aqui eu devo modificar
  dtcriado DateTime @default(now())
  dtmodifica DateTime @default(now()) @map("data_modificado")
  @@index(slug)

  Autor User @relation(fields: [autorId], references: [id])//posso mudar para "autor", mas tanto faz
  autorId    String
}

model Videos {
  id String @id @default(cuid())
  nome String
  slug String
  link String
}

model PedidoImpressora {
  id String @id @default(cuid())
  nomeproj String
  objcriado String
  motivo String

  Autor User @relation(fields: [autorId], references: [id])//posso mudar para "autor", mas tanto faz
  autorId    String
}

model Msgaluno {
  id String @id @default(cuid())
  resumo String
  conteudo String
  aprovado Boolean @default(false)

  Autor User @relation(fields: [autorId], references: [id])//posso mudar para "autor", mas tanto faz
  autorId    String
}